openapi: 3.0.0
info:
  title: Test RamlWrap API's
  description: A series of useful APIs that can be used to test RamlWrap functionality.
  version: 0.1.9

servers:
  - url: http://localhost:8000/
    description: Localhost Development server

paths:
  /api:
    summary: API root
    get:
      responses:
        200:
          description: "thing"
          content:
            "application/json":
              schema:
                {
                  "title": "test ",
                  "description": "test",
                  "type": "object",
                  "required": [
                      "device"
                  ],
                  "properties": {
                    "device": {
                      "description": "info",
                      "type": "object",
                      "required": [
                          "type"
                      ],
                      "properties": {
                        "type": {
                          "description": "Type of device",
                          "enum": [
                              "IOS",
                              "ANDROID"
                          ]
                        },
                        "id": {
                          "description": "id",
                          "type": "string"
                        },
                        "osVersion": {
                          "description": "os version",
                          "type": "string"
                        }
                      }
                    },
                    "version": {
                      "description": "version",
                      "type": "string"
                    }
                  }
                }
              example:
                {
                  "device": {
                    "type": "IOS",
                    "id": "123",
                    "osVersion": "15"
                  },
                  "version": "1"
                }

        500:
          description: A really unhappy server error.
  /api2:
    summary: API root
    put:
      #requestBody:
      #content:
      # application/json:
      #schema:
      #$ref: 'json/service_request.json'
      #example:
      #  $ref: 'json/service_request_example.json'
      responses:
        204:
          description: "thing"
          content:
            "application/json":
              schema:
                title: 'test '
                description: test
                type: object
                required:
                  - device
                properties:
                  device:
                    description: info
                    type: object
                    required:
                      - type
                    properties:
                      type:
                        description: Type of device
                        enum:
                          - IOS
                          - ANDROID
                      deviceid:
                        description: id
                        type: string
                      osVersion:
                        description: os version
                        type: string
                  type:
                    description: type
                    type: string
              example:
                {
                  "device": {
                    "type": "IOS",
                    "deviceid": "123",
                    "osVersion": "15"
                  },
                  "type": "1"
                }

        422:
          description: A really unhappy post server error.
#  /api3/no/example:
#    summary: API root
#    get:
#      #requestBody:
#      #content:
#      # application/json:
#      #schema:
#      #$ref: 'json/service_request.json'
#      #example:
#      #  $ref: 'json/service_request_example.json'
#      responses:
#        200:
#          description: "thing"
#          content:
#            "application/json":
#              schema:
#                title: 'test '
#                description: test
#                type: object
#                required:
#                  - device
#                properties:
#                  device:
#                    description: info
#                    type: object
#                    required:
#                      - type
#                    properties:
#                      type:
#                        description: Type of device
#                        enum:
#                          - IOS
#                          - ANDROID
#                      id:
#                        description: id
#                        type: string
#                      osVersion:
#                        description: os version
#                        type: string
#                  version:
#                    description: version
#                    type: string
#
#        500:
#          description: A really unhappy server error.
#  /api4error:
#    summary: API root
#    get:
#      #requestBody:
#      #content:
#      # application/json:
#      #schema:
#      #$ref: 'json/service_request.json'
#      #example:
#      #  $ref: 'json/service_request_example.json'
#      responses:
#        500:
#          description: "thing"
#          content:
#            "application/json":
#            schema:
#            description: Error response
#            type: object
#            required:
#              - reason
#            properties:
#              errorDescription:
#                type: string
#              reason:
#                type: string
#          example:
#            {
#              "reason": "jsonValidationError",
#              "errorDescription": "Error occurred loading json or during json validation."
#            }
#        required: true

something:
  $ref: "file/"
    # /api/1:
    #   displayName: API 1
    #   description: Example API with a post request.
    #   post:
    #     body:
    #       application/json:
    #         schema: !include json/service_request.json
    #         example: !include json/service_request_example.json
    #     responses:
    #       200:
    #         body:
    #           application/json:



# /api/1/1.1:
#   displayName: API 1.1
#   get:
#     responses:
#     200:
#       body:
#         application/json:
# /api/1/1.1/1.1.1:
#   displayName: API 1.1.1
#   get:
#     responses:
#     200:
#       body:
#         application/json:
# /api/2:
#   displayName: API 2
#   description: Example API with get request.
#   get:
#     responses:
#       200:
#         body:
#           application/json:
#             example: !include json/example2.json
# /api/3:
#   displayName: API 3
#   description: Example API with get and post request with query parameters.
#   get:
#     queryParameters:
#       param1:
#         type: string
#         required: false
#       param2:
#         type: string
#         minLength: 5
#         maxLength: 10
#         required: true
#       param3:
#         type: number
#         required: false
#     responses:
#       200:
#         body:
#           application/json:
#             example: {"exampleData": "You just made a GET!"}
#     post:
#       queryParameters:
#         param1:
#           type: string
#           required: false
#         param2:
#           type: string
#           minLength: 5
#           maxLength: 10
#           required: true
#         param3:
#           type: number
#           required: false
#       responses:
#         200:
#           body:
#             application/json:
#               example: {"exampleData": "You just made a POST!"}
#   /4:
#     displayName: API 4
#     description: Example API with empty post body.
#     post:
#       responses:
#         200:
#           description: Looks good.
#   /5:
#     displayName: API 5
#     description: Example PUT API
#     put:
#       responses:
#         200:
#           body:
#             application/json:
#                 example: {"exampleData": "You just made a PUT request"}
#   /patch-api:
#     displayName: API for testing PATCH
#     description: Example PATCH API
#     patch:
#       responses:
#         200:
#           body:
#             application/json:
#                 example: {"exampleData": "You just made a PATCH request"}
#   /delete-api:
#     displayName: API for testing DELETE
#     description: Example DELETE API
#     delete:
#       responses:
#         200:
#           body:
#             application/json:
#                 example: {"exampleData": "You just made a DELETE request"}
#   /multi_content_type:
#     displayName: API for testing multiple content types
#     description: Example POST API
#     post:
#       body:
#         application/json:
#         application/x-www-form-urlencoded:
#       responses:
#         200:
#           body:
#             application/json:
#                  example: {"exampleData": "You just made a POST request"}
#   /no_content_type:
#       displayName: API for testing with no defined content types
#       description: Example POST API
#       post:
#         responses:
#           200:
#             body:
#               application/json:
#                    example: {"exampleData": "You just made a POST request"}
